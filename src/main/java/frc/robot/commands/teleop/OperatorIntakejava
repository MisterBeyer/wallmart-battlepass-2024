
package frc.robot.commands.teleop;
import java.util.function.DoubleSupplier;

import frc.robot.Constants.OperatorConstants;

import frc.robot.subsystems.Intake;

//dont unplug the ethernet
public class OperatorIntake extends Command{
    private Intake intake;

    private DoubleSupplier left;
    private DoubleSupplier right;


    /**
     *  Command providing Basic Intake Control by Operator Controller
     * @param module module to use as note intake
     * @param operator_left Supplier for operator Joystick used for Intaking
     * @param operator_right Supplier for operator Joystick used for Shooting
     */
    public IntakeCommands(Intake module) {
        this.intake = module;
        this.left = operator_left;
        this.right = operator_right;
    }

    
    // Called when the command is initially scheduled.
    @Override
    public void initialize() {
    }

    // Called every time the scheduler runs while the command is scheduled.

    @Override
    public void execute() {
        if (right.getAsDouble() < 0) { IntakeC.Shoot(); }
        //if(left.getAsDouble() > 0) { Intake(); }
         else if (left.getAsDouble() < 0) { ShootBack(); }
         else if (right.getAsDouble() < 0) { ShootFront(); }
        else {
            rollerState = 0; 
            Stop();
        }
    } 
    

    // Called once the command ends or is interrupted.
    @Override
    public void end(boolean interrupted) {
        intake.stop();
    }

    // Returns true when the command should end.
    @Override
    public boolean isFinished() {
        return false;
    }
}